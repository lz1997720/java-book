package session3;

public class ThreadNote {
/*
 * 如果程序只有一条执行路径，那么改程序就是单线程程序。
如果程序有多条执行路径，那么该程序就是多线程程序。

线程依赖于进程而存在的。
进程就是正在运行的程序，每一个进程都有它自己的内存空间和系统资源。只有运行程序才会出现。

多进程的意义：
	单进程的计算机只能多一件事情（例如命令提示符执行命令），而我们现在的电脑都可以做很多事情。
	举例：看片，打游戏，听歌同时进行。
	也就是说现在的计算机都是支持多进程的，就可以在一个时间段内执行多个任务。
	并且可以提高cpu的使用率。
	

	问题：一边玩游戏一边听音乐是同时进行的吗？
	不是，因为单cpu在某一个时间点上只能做一件事情。
	而我们在玩游戏，或听音乐的时候，是cpu在做程序间的高效切换让我们觉得是同时进行的，很快很快。
	
	

什么是线程？
	在一个进程内又可以执行多个任务，而这每一个任务我就可以看出是一个线程。
	线程：是程序的执行单元。是程序使用cpu的最基本单位。
	
	单线程：如果程序只有一条执行路径
	多线程：如果程序有多条执行路径。

	多线程的存在，不是提高程序的执行速度，其实是为了提高应用程序的使用率。
	程序的执行其实都是在抢cpu资源，cpu的执行权。
	而多个进程是在抢这个资源，而其中的某一个进程如果执行路径比较多，就会有更高的几率抢到cpu的执行权。
 * */
	public static void main(String[] args) {
		//利用debug查看线程，发现以前写的程序都是运行在main方法中，main方法运行在主线程
		System.out.println("hello");

	}

}
