实现线程的方式：2种

	方式1：继承Thread类
	    A:自定义类MyThread继承Thread。
	    B：在MyThread类中重写run()方法。
	    C:创建MyThread对象。
	    D：启动线程对象。

问题：
	a:为什么要重写run()方法？   run()里面封装的是被线程执行的代码
	b:启动线程对象用的是哪个方法？   start()
	c:run()和start()方法的区别？   run()直接调用仅仅是普通的方法，start()先启动线程，再由JVM调用run()方法


	方式2：实现Runnable接口
	    A:自定义类MyRunnable继承Runnable。
	    B：在MyRunnable类中重写run()方法。
	    C:创建MyRunnable对象。
	    D：创建Thread类对象，并把C步骤的对象作为构造参数传递。


问题：
	有了方式1，为什么还来一个方式2呢?
	A:方式2解决了单继承的方式。
	B:适合多个相同的程序的代码去处理同一个资源的情况，把线程同程序的代码，数据有效分离，较好的体现了面向对象的设计思想。